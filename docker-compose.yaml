version: '3.3'

services:


    slave:
#        restart: always
#        build: ./mlflow_db
#        image: larribas/mlflow
#        image: amd64/ubuntu:bionic
        image: simg
        build:
          context: .
          dockerfile: Dockerfile.node
        container_name: s-rundeck

        networks:
#            - frontend
            backend:
                aliases:
                  - slave
        expose:
            - "22"
        ports:
            - 22:22
        env_file:
          - slave.env
        environment:
            - no_proxy='localhost'
        volumes:
            - .:/data
        command: sleep infinity
#        command: --default-artifact-root /tmp/artifact-root --backend-store-uri sqlite:////tmp/mlflow.db
        # --default-artifact-root s3://mlflow_bucket/mlflow/

    master:
#        restart: always
        image: batix/rundeck-ansible2
        container_name: m-rundeck

        networks:
            backend:
                aliases:
                    - master
        expose:
            - "4440"
#            - "22"
        ports:
            - 4440:4440
#            - 22:22
        env_file:
          - .env
        environment:
            - no_proxy='localhost'
        volumes:
            - .:/data
            - D:\temp\rundeck\project.properties:/home/rundeck/projects/Test-Project/etc/project.properties
            - D:\temp\rundeck\resources.xml:/home/rundeck/projects/Test-Project/etc/resources.xml
            - D:\temp\rundeck\inventory.yml:/home/rundeck/projects/inventory.yml
            - D:\temp\rundeck\inventory.ini:/home/rundeck/projects/inventory.ini

#            - //localhost/d$/temp/rundeck/project.properties:/home/rundeck/projects/Test-Project/etc/project.properties
#            - //localhost/d$/temp/rundeck/resources.xml:/home/rundeck/projects/Test-Project/etc/resources.xml
#    nginx:
#        restart: always
#        build: ./nginx
#        image: mlflow_nginx
#        container_name: mlflow_nginx
#        ports:
#            - "80:80"
#        networks:
#            - frontend
#        depends_on:
#            - web

networks:
#    frontend:
#        driver: bridge
    backend:
        driver: bridge

volumes:
    dbdata: